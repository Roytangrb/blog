<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>DevOps on Blog d(x)</title><link>/blog/categories/devops/</link><description>Recent content in DevOps on Blog d(x)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â©2022 Roy Tang</copyright><lastBuildDate>Sun, 01 Nov 2020 21:16:24 +0800</lastBuildDate><atom:link href="/blog/categories/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Micro-services development with Minikube and Skaffold</title><link>/blog/posts/micro-svc-dev-minikube-skaffold/</link><pubDate>Sun, 01 Nov 2020 21:16:24 +0800</pubDate><guid>/blog/posts/micro-svc-dev-minikube-skaffold/</guid><description>While developing a multi-component application, like a micro-services backend, the release environments are quite different from the ones on our local machines. For example, during releases, the docker images are built and pushed to an artifactory then get deployed to a cloud kubernetes cluster. There are more steps going on in the CI/CD pipeline, accessing key vaults, applying configmaps, etc.
Scenario Services are sometimes dependent on each other. As in my scenario, we are using the API-LED architecture.</description></item></channel></rss>